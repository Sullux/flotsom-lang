## JS version of this code:
const pure = {
  // returns a random string of digits and lower-case characters
  randomString: (length, random = Math.random) =>
    [...Array(length)].map(i => (~~(random() * 36)).toString(36)).join(''),

  // generates an event ID from a timestamp plus a random string
  createEventId: (now = Date.now, randomString = pure.randomString) =>
    `${now()}.${randomString()}`,

  // the api GET handler implementation
  get: (createEventId = pure.createEventId) =>
    event =>
      Object.assign(
        {
          statusCode: 200,
          body: JSON.stringify({
            message: 'success',
            eventId: createEventId(),
          }),
        },
        event),
}
module.exports = get()
##

## Flotsom version of this code: ##
.: {
  ..<
    @date @math @json
    { &now &random round $36:($ /36) stringify }
  >

  # returns a random string of digits and lower-case characters
  randomString: < ( length map &($36 round random * /36) ) >

  # generates an event ID from a timestamp plus a random string
  eventId: < now + randomString >
}

# the api GET handler implementation
get: {
  body: (stringify { message: /success eventId })
  statusCode: /200
  ..event
}
